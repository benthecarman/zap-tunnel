[package]
name = "zap-tunnel-lnd"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
axum = { version = "0.6.12", optional = true }
anyhow = "1.0"
bitcoin = { version = "0.29.2", features = ["serde", "std"] }
clap = { version = "4.0.24", features = ["derive"] }
cfg-if = "1"
console_error_panic_hook = "0.1"
console_log = "1"
futures = "0.3.26"
leptos = { version = "0.2", default-features = false, features = ["serde"] }
leptos_meta = { version = "0.2", default-features = false }
leptos_axum = { version = "0.2", optional = true }
leptos_router = { version = "0.2", default-features = false }
lightning-invoice = { version = "0.22.0", features = ["std"] }
log = "0.4"
home = { version = "0.5.4", optional = true }
gloo-net = "0.2.6"
gloo-utils = { version = "0.1.6", features = ["serde"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1.0"
simple_logger = "4"
sled = "0.34.7"
tokio = "1"
thiserror = "1.0.38"
tracing = { version = "0.1.37", optional = true }
http = "0.2.8"
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4", features = ["fs"], optional = true }
tonic_openssl_lnd = { version = "0.2.0", optional = true }
url = { version = "2.3.1", features = ["serde"] }
wasm-bindgen = "0.2"
zap-tunnel-client = { path = "../client", default-features = false, features = ["blocking"], optional = true }

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = ["dep:axum", "dep:leptos_axum", "tower", "tower-http", "leptos/ssr", "leptos_meta/ssr", "leptos_router/ssr", "dep:tonic_openssl_lnd", "dep:zap-tunnel-client", "dep:home"]

[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "leptos_axum"]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "zap_tunnel_lnd"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false